buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'org._9636dev'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'AutoVanilla'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AutoVanilla'
            
            mods {
                autovanilla {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AutoVanilla'
            
            mods {
                autovanilla {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'AutoVanilla'

            mods {
                autovanilla {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'autovanilla', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                autovanilla {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "AutoVanilla.refmap.json"

    config "AutoVanilla.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://cursemaven.com' }
    maven { url 'https://modmaven.dev/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.8'

    compileOnly(fg.deobf("mezz.jei:jei-1.19.2-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-1.19.2-forge-api:${jei_version}"))
    compileOnly fg.deobf("mcjty.theoneprobe:theoneprobe:${top_version}:api") {
        transitive = false
    }

    runtimeOnly(fg.deobf("mezz.jei:jei-1.19.2-forge:${jei_version}"))
    runtimeOnly fg.deobf("mcjty.theoneprobe:theoneprobe:${top_version}") {
        transitive = false
    }
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {

}

jar {
    manifest {
        attributes([
                "Specification-Title": "autovanilla",
                            "Specification-Vendor": "9636Dev(HW9636), gurkysword12",
                            "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                            "Implementation-Vendor": "9636Dev(HW9636), gurkysword12",
                            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
